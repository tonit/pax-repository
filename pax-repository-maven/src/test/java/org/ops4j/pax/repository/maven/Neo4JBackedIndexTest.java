package org.ops4j.pax.repository.maven;import org.junit.After;import org.junit.Before;import org.junit.Test;import org.neo4j.graphdb.Node;import org.neo4j.graphdb.Path;import org.neo4j.graphdb.Relationship;import org.neo4j.graphdb.Transaction;import org.neo4j.graphdb.traversal.Evaluators;import org.neo4j.kernel.EmbeddedGraphDatabase;import org.neo4j.kernel.Traversal;/** * */public class Neo4JBackedIndexTest{    private static final String DB_FOLDER = "target/db";    private EmbeddedGraphDatabase m_db;    @Test    public void test()    {        Neo4JBackedIndex<String, String> s = new Neo4JBackedIndex<String, String>( m_db );        s.put( "foo", "org", "ops4j", "pax" );    }    @Before    public void before()    {        m_db = new EmbeddedGraphDatabase( DB_FOLDER );    }    @After    public void after()    {        try        {            remove();        } finally        {            m_db.shutdown();        }    }    private void remove()    {        System.out.println( "------------------ All paths from ref node: " );        Transaction tx = m_db.beginTx();        try        {            final Node node = m_db.getReferenceNode();//            for( Path p : Traversal.description()                .depthFirst()                .traverse( node ) )            {                Object id2 = p.endNode().getProperty( "id", "D" );                System.out.println( "At depth: " + p.length() + " Node: " + id2 );                for( Relationship r : p.relationships() )                {                    System.out.println( "< " + r + " >  " + id2 );                }            }            tx.success();        } finally        {            tx.finish();        }    }}