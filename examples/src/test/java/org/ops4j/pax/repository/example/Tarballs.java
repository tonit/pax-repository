package org.ops4j.pax.repository.example;import com.google.inject.AbstractModule;import com.google.inject.Guice;import com.google.inject.Injector;import com.google.inject.Key;import com.google.inject.TypeLiteral;import org.junit.Test;import org.ops4j.base.io.InputStreamSource;import org.ops4j.base.io.UncachedInputStreamSource;import org.ops4j.pax.repository.Resolver;import org.ops4j.pax.repository.tarball.TarballModule;import static com.google.inject.name.Names.*;/** * */public class Tarballs{    /**     * The input data.     */    private AbstractModule testinput()    {        return new AbstractModule()        {            @Override            protected void configure()            {                bind( InputStreamSource.class ).annotatedWith(named("repository")).toInstance( new UncachedInputStreamSource( Tarballs.class.getResourceAsStream( "/" ) ) );                // and the system itself:               // bind(new TypeLiteral<Resolver<String>>() {} ).to(System.class);            }        };    }    @Test    public void story()    {        Injector injector = Guice.createInjector( new TarballModule(), testinput() );        Resolver<String> system = injector.getInstance( Key.get( new TypeLiteral<Resolver<String>>() {}));        // now for the index:        // fully usable repo!        // use it!    }}