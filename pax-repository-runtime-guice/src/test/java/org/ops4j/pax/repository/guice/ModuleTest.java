package org.ops4j.pax.repository.guice;import java.io.InputStream;import com.google.inject.AbstractModule;import com.google.inject.Guice;import com.google.inject.Injector;import com.google.inject.Module;import com.google.inject.TypeLiteral;import org.junit.Test;import org.ops4j.pax.repository.Provider;import org.ops4j.pax.repository.Repository;import org.ops4j.pax.repository.base.helpers.UncachedProvider;import org.ops4j.pax.repository.tarball.TarballRepository;import static com.google.inject.name.Names.*;/** * Satisfaction of Guice Modules */public class ModuleTest {    @Test    public void testBaseOnly()    {        Injector injector = Guice.createInjector( new RepositoryBaseModule() );    }    @Test    public void testBasic()    {        Injector injector = Guice.createInjector( new RepositoryBaseModule(), new MavenModule() );    }     @Test    public void testAll()    {        Injector injector = Guice.createInjector( new RepositoryBaseModule(), new MavenModule(), new TarballModule() , data());        // get system    }    private Module data()    {        return new AbstractModule() {            @Override            protected void configure()            {                bind( new TypeLiteral<Provider<InputStream>>() {} ).annotatedWith( named( "repository" ) ).toInstance( new UncachedProvider<InputStream>( getClass().getResourceAsStream( "/" ) ) );            }        };    }}