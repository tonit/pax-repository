/* * Copyright (C) 2011 Toni Menzel * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.ops4j.repository.base.typed;import org.junit.Test;import org.ops4j.pax.repository.RepositoryException;import org.ops4j.pax.repository.Resolver;import org.ops4j.pax.repository.base.typed.TypeMapping;import org.ops4j.pax.repository.base.typed.TypedWrapperRepository;import org.ops4j.pax.repository.typed.TypedReference;import org.ops4j.pax.repository.typed.TypedRepository;import static org.mockito.Mockito.*;import static org.ops4j.pax.repository.base.typed.DefaultTypeMapping.*;/** * Test */public class TypedWrapperRepositoryTest {    @Test    public void mapSimple()        throws RepositoryException    {        Resolver<String, String> resolver = mock( Resolver.class );        TypedRepository<String> rep = new TypedWrapperRepository<String, String>( resolver,                                                                                  new TypeMapping[]{                                                                                      map( Ref.A1, "A1" ),                                                                                      map( Ref.A2, "A2" )                                                                                  }        );        // Now you can use Ref.A1 to query the resolver with "A1".     }    enum Ref implements TypedReference {        A1, A2    }}