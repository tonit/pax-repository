/* * Copyright (C) 2010 Toni Menzel * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.ops4j.base.io;import java.io.IOException;import java.io.InputStream;import org.junit.Test;import org.ops4j.store.Handle;import org.ops4j.store.Store;import static junit.framework.Assert.*;import static org.mockito.Mockito.*;/** * */public class LazyCachedInputStreamTest{    @Test    public void testLazyCachedInputStreamSourceTest()        throws IOException    {        // Setup:        Store<InputStream> store = mock( Store.class );        InputStream input = getSource();        Handle handle = mock( Handle.class );        when( store.store( input ) ).thenReturn( handle );        when( store.load( handle ) ).thenReturn( input );        LazyCachedSource<InputStream> source = new LazyCachedSource( store, input );        // should have not fetched anything yet.        verifyZeroInteractions( store );        InputStream stream = source.get();        assertNotNull( stream );        verify( store, times( 1 ) ).store( input );        // again        source.get();        // no more interactions!        verify( store, times( 1 ) ).store( input );    }    public InputStream getSource()    {        return this.getClass().getResourceAsStream( "/test.txt" );    }}