package org.ops4j.pax.repository.base.typed;import java.util.concurrent.ConcurrentHashMap;import java.util.concurrent.ConcurrentMap;import org.ops4j.pax.repository.Provider;import org.ops4j.pax.repository.RepositoryException;import org.ops4j.pax.repository.typed.RepositoryReference;import org.ops4j.pax.repository.typed.TypedRepository;/** * */public class DefaultTypedRepository<V> implements TypedRepository<V> {    private final ConcurrentMap<RepositoryReference, V> m_map = new ConcurrentHashMap<RepositoryReference,V>();    public void set( RepositoryReference key, V value )    {        m_map.put( key, value );    }    public Provider<V> get( final RepositoryReference key )    {        return new Provider<V>() {            final V value = m_map.get( key );            public V get()                throws RepositoryException            {                return value;            }        };    }}