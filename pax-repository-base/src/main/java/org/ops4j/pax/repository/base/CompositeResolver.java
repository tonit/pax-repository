/* * Copyright (C) 2010 Toni Menzel * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.ops4j.pax.repository.base;import java.util.Arrays;import java.util.List;import org.ops4j.pax.repository.Provider;import org.ops4j.pax.repository.RepositoryException;import org.ops4j.pax.repository.Resolver;/** * Simple composite of resolvers. */public class CompositeResolver<T, R> implements Resolver<T, R> {    private List<Resolver<T, R>> m_resolvers;    public CompositeResolver( Resolver<T, R>... resolvers )    {        m_resolvers = Arrays.asList( resolvers );    }    public Provider<R> find( T query )        throws RepositoryException    {        for( Resolver<T, R> resolver : m_resolvers ) {            Provider<R> artifact = resolver.find( query );            if( artifact != null ) {                return artifact;            }        }        return null;    }}