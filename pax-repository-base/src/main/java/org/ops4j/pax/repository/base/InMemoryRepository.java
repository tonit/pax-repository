/* * Copyright (C) 2010 Toni Menzel * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package org.ops4j.pax.repository.base;import java.util.HashMap;import java.util.Map;import org.ops4j.pax.repository.Artifact;import org.ops4j.pax.repository.RepositoryException;import org.ops4j.pax.repository.spi.IndexVisitor;import org.ops4j.pax.repository.spi.Repository;/** * */public class InMemoryRepository<T> implements Repository<T>{    final private Map<T, Artifact> m_data;    public InMemoryRepository( Map<T, Artifact> data )    {        m_data = data;    }    public void index( IndexVisitor<T> tIndexVisitor )        throws RepositoryException    {        for( T key : m_data.keySet() )        {            tIndexVisitor.touch( key );        }    }    public Artifact retrieve( T identifier )        throws RepositoryException    {        return m_data.get( identifier );    }    public static <T> Repository<T> create( RepositoryEntry<T>... entries )    {        Map<T, Artifact> map = new HashMap<T, Artifact>( 1 );        for( RepositoryEntry<T> entry : entries )        {            map.put( entry.getKey(), entry.getArtifact() );        }        return new InMemoryRepository<T>( map );    }}